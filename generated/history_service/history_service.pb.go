// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: history_service.proto

package history_service

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open      float64                `protobuf:"fixed64,1,opt,name=open,proto3" json:"open,omitempty"`
	Close     float64                `protobuf:"fixed64,2,opt,name=close,proto3" json:"close,omitempty"`
	High      float64                `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low       float64                `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Volume    int64                  `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	AdjClose  float64                `protobuf:"fixed64,8,opt,name=adjClose,proto3" json:"adjClose,omitempty"`
}

func (x *History) Reset() {
	*x = History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_history_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_history_service_proto_rawDescGZIP(), []int{0}
}

func (x *History) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *History) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *History) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *History) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *History) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *History) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *History) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *History) GetAdjClose() float64 {
	if x != nil {
		return x.AdjClose
	}
	return 0
}

type GetBySymbolUuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolUuid string                 `protobuf:"bytes,1,opt,name=symbolUuid,proto3" json:"symbolUuid,omitempty"`
	StartDate  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *GetBySymbolUuidRequest) Reset() {
	*x = GetBySymbolUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBySymbolUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBySymbolUuidRequest) ProtoMessage() {}

func (x *GetBySymbolUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_history_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBySymbolUuidRequest.ProtoReflect.Descriptor instead.
func (*GetBySymbolUuidRequest) Descriptor() ([]byte, []int) {
	return file_history_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetBySymbolUuidRequest) GetSymbolUuid() string {
	if x != nil {
		return x.SymbolUuid
	}
	return ""
}

func (x *GetBySymbolUuidRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetBySymbolUuidRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type GetBySymbolUuidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*History `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetBySymbolUuidResponse) Reset() {
	*x = GetBySymbolUuidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBySymbolUuidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBySymbolUuidResponse) ProtoMessage() {}

func (x *GetBySymbolUuidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_history_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBySymbolUuidResponse.ProtoReflect.Descriptor instead.
func (*GetBySymbolUuidResponse) Descriptor() ([]byte, []int) {
	return file_history_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetBySymbolUuidResponse) GetItems() []*History {
	if x != nil {
		return x.Items
	}
	return nil
}

type StartUpdateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartUpdateJobRequest) Reset() {
	*x = StartUpdateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartUpdateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartUpdateJobRequest) ProtoMessage() {}

func (x *StartUpdateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_history_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartUpdateJobRequest.ProtoReflect.Descriptor instead.
func (*StartUpdateJobRequest) Descriptor() ([]byte, []int) {
	return file_history_service_proto_rawDescGZIP(), []int{3}
}

type StartUpdateJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartUpdateJobResponse) Reset() {
	*x = StartUpdateJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartUpdateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartUpdateJobResponse) ProtoMessage() {}

func (x *StartUpdateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_history_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartUpdateJobResponse.ProtoReflect.Descriptor instead.
func (*StartUpdateJobResponse) Descriptor() ([]byte, []int) {
	return file_history_service_proto_rawDescGZIP(), []int{4}
}

type GetChartBySymbolUuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SymbolUuid string                 `protobuf:"bytes,1,opt,name=symbolUuid,proto3" json:"symbolUuid,omitempty"`
	StartDate  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *GetChartBySymbolUuidRequest) Reset() {
	*x = GetChartBySymbolUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChartBySymbolUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartBySymbolUuidRequest) ProtoMessage() {}

func (x *GetChartBySymbolUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_history_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChartBySymbolUuidRequest.ProtoReflect.Descriptor instead.
func (*GetChartBySymbolUuidRequest) Descriptor() ([]byte, []int) {
	return file_history_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetChartBySymbolUuidRequest) GetSymbolUuid() string {
	if x != nil {
		return x.SymbolUuid
	}
	return ""
}

func (x *GetChartBySymbolUuidRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetChartBySymbolUuidRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type GetChartBySymbolUuidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*ChartValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *GetChartBySymbolUuidResponse) Reset() {
	*x = GetChartBySymbolUuidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChartBySymbolUuidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartBySymbolUuidResponse) ProtoMessage() {}

func (x *GetChartBySymbolUuidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_history_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChartBySymbolUuidResponse.ProtoReflect.Descriptor instead.
func (*GetChartBySymbolUuidResponse) Descriptor() ([]byte, []int) {
	return file_history_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetChartBySymbolUuidResponse) GetValue() []*ChartValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type ChartValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   string    `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Values []float64 `protobuf:"fixed64,2,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *ChartValue) Reset() {
	*x = ChartValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartValue) ProtoMessage() {}

func (x *ChartValue) ProtoReflect() protoreflect.Message {
	mi := &file_history_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartValue.ProtoReflect.Descriptor instead.
func (*ChartValue) Descriptor() ([]byte, []int) {
	return file_history_service_proto_rawDescGZIP(), []int{7}
}

func (x *ChartValue) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ChartValue) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_history_service_proto protoreflect.FileDescriptor

var file_history_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x76, 0x31, 0x2e, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x02, 0x0a, 0x07, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x6a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x61, 0x64, 0x6a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0xa8, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x4c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18,
	0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38,
	0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x32, 0xe1, 0x03, 0x0a, 0x0e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x2a, 0x2e, 0x76, 0x31, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x76, 0x31,
	0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x7d,
	0x3a, 0x01, 0x2a, 0x12, 0xaa, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x42, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x2e, 0x76,
	0x31, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x76, 0x31, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x42, 0x79, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x89, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x12, 0x29, 0x2e, 0x76, 0x31, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x76, 0x31, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0xb2, 0x02, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x31, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x92, 0x41, 0xf0,
	0x01, 0x12, 0x5c, 0x0a, 0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x20, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x44, 0x79, 0x73, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x64, 0x79, 0x73, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x40, 0x64, 0x79, 0x73, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a,
	0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x69, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12, 0x62, 0x0a,
	0x58, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x64, 0x69, 0x64, 0x6e, 0x27,
	0x74, 0x20, 0x6f, 0x72, 0x20, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x20, 0x69,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x12, 0x06, 0x0a, 0x04, 0x9a, 0x02, 0x01,
	0x07, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_history_service_proto_rawDescOnce sync.Once
	file_history_service_proto_rawDescData = file_history_service_proto_rawDesc
)

func file_history_service_proto_rawDescGZIP() []byte {
	file_history_service_proto_rawDescOnce.Do(func() {
		file_history_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_history_service_proto_rawDescData)
	})
	return file_history_service_proto_rawDescData
}

var file_history_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_history_service_proto_goTypes = []interface{}{
	(*History)(nil),                      // 0: v1.history_service.History
	(*GetBySymbolUuidRequest)(nil),       // 1: v1.history_service.GetBySymbolUuidRequest
	(*GetBySymbolUuidResponse)(nil),      // 2: v1.history_service.GetBySymbolUuidResponse
	(*StartUpdateJobRequest)(nil),        // 3: v1.history_service.StartUpdateJobRequest
	(*StartUpdateJobResponse)(nil),       // 4: v1.history_service.StartUpdateJobResponse
	(*GetChartBySymbolUuidRequest)(nil),  // 5: v1.history_service.GetChartBySymbolUuidRequest
	(*GetChartBySymbolUuidResponse)(nil), // 6: v1.history_service.GetChartBySymbolUuidResponse
	(*ChartValue)(nil),                   // 7: v1.history_service.ChartValue
	(*timestamppb.Timestamp)(nil),        // 8: google.protobuf.Timestamp
}
var file_history_service_proto_depIdxs = []int32{
	8,  // 0: v1.history_service.History.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 1: v1.history_service.History.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 2: v1.history_service.GetBySymbolUuidRequest.startDate:type_name -> google.protobuf.Timestamp
	8,  // 3: v1.history_service.GetBySymbolUuidRequest.endDate:type_name -> google.protobuf.Timestamp
	0,  // 4: v1.history_service.GetBySymbolUuidResponse.items:type_name -> v1.history_service.History
	8,  // 5: v1.history_service.GetChartBySymbolUuidRequest.startDate:type_name -> google.protobuf.Timestamp
	8,  // 6: v1.history_service.GetChartBySymbolUuidRequest.endDate:type_name -> google.protobuf.Timestamp
	7,  // 7: v1.history_service.GetChartBySymbolUuidResponse.value:type_name -> v1.history_service.ChartValue
	1,  // 8: v1.history_service.HistoryService.GetBySymbolUuid:input_type -> v1.history_service.GetBySymbolUuidRequest
	5,  // 9: v1.history_service.HistoryService.GetChartBySymbolUuid:input_type -> v1.history_service.GetChartBySymbolUuidRequest
	3,  // 10: v1.history_service.HistoryService.StartUpdateJob:input_type -> v1.history_service.StartUpdateJobRequest
	2,  // 11: v1.history_service.HistoryService.GetBySymbolUuid:output_type -> v1.history_service.GetBySymbolUuidResponse
	6,  // 12: v1.history_service.HistoryService.GetChartBySymbolUuid:output_type -> v1.history_service.GetChartBySymbolUuidResponse
	4,  // 13: v1.history_service.HistoryService.StartUpdateJob:output_type -> v1.history_service.StartUpdateJobResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_history_service_proto_init() }
func file_history_service_proto_init() {
	if File_history_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_history_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBySymbolUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBySymbolUuidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartUpdateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartUpdateJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChartBySymbolUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChartBySymbolUuidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_history_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_history_service_proto_goTypes,
		DependencyIndexes: file_history_service_proto_depIdxs,
		MessageInfos:      file_history_service_proto_msgTypes,
	}.Build()
	File_history_service_proto = out.File
	file_history_service_proto_rawDesc = nil
	file_history_service_proto_goTypes = nil
	file_history_service_proto_depIdxs = nil
}
