// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: symbol_service.proto

package symbol_service

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	proto_models "github.com/vectorman1/analysis/analysis-api/generated/proto_models"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateResponseStatus int32

const (
	UpdateResponse_FAILED  UpdateResponseStatus = 0
	UpdateResponse_SUCCESS UpdateResponseStatus = 1
)

// Enum value maps for UpdateResponseStatus.
var (
	UpdateResponseStatus_name = map[int32]string{
		0: "FAILED",
		1: "SUCCESS",
	}
	UpdateResponseStatus_value = map[string]int32{
		"FAILED":  0,
		"SUCCESS": 1,
	}
)

func (x UpdateResponseStatus) Enum() *UpdateResponseStatus {
	p := new(UpdateResponseStatus)
	*p = x
	return p
}

func (x UpdateResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_symbol_service_proto_enumTypes[0].Descriptor()
}

func (UpdateResponseStatus) Type() protoreflect.EnumType {
	return &file_symbol_service_proto_enumTypes[0]
}

func (x UpdateResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateResponseStatus.Descriptor instead.
func (UpdateResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{5, 0}
}

type DeleteSymbolResponseStatus int32

const (
	DeleteSymbolResponse_FAILED  DeleteSymbolResponseStatus = 0
	DeleteSymbolResponse_SUCCESS DeleteSymbolResponseStatus = 1
)

// Enum value maps for DeleteSymbolResponseStatus.
var (
	DeleteSymbolResponseStatus_name = map[int32]string{
		0: "FAILED",
		1: "SUCCESS",
	}
	DeleteSymbolResponseStatus_value = map[string]int32{
		"FAILED":  0,
		"SUCCESS": 1,
	}
)

func (x DeleteSymbolResponseStatus) Enum() *DeleteSymbolResponseStatus {
	p := new(DeleteSymbolResponseStatus)
	*p = x
	return p
}

func (x DeleteSymbolResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeleteSymbolResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_symbol_service_proto_enumTypes[1].Descriptor()
}

func (DeleteSymbolResponseStatus) Type() protoreflect.EnumType {
	return &file_symbol_service_proto_enumTypes[1]
}

func (x DeleteSymbolResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeleteSymbolResponseStatus.Descriptor instead.
func (DeleteSymbolResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{7, 0}
}

type PopulateSymbolResponseStatus int32

const (
	PopulateSymbolResponse_FAILED  PopulateSymbolResponseStatus = 0
	PopulateSymbolResponse_SUCCESS PopulateSymbolResponseStatus = 1
)

// Enum value maps for PopulateSymbolResponseStatus.
var (
	PopulateSymbolResponseStatus_name = map[int32]string{
		0: "FAILED",
		1: "SUCCESS",
	}
	PopulateSymbolResponseStatus_value = map[string]int32{
		"FAILED":  0,
		"SUCCESS": 1,
	}
)

func (x PopulateSymbolResponseStatus) Enum() *PopulateSymbolResponseStatus {
	p := new(PopulateSymbolResponseStatus)
	*p = x
	return p
}

func (x PopulateSymbolResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PopulateSymbolResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_symbol_service_proto_enumTypes[2].Descriptor()
}

func (PopulateSymbolResponseStatus) Type() protoreflect.EnumType {
	return &file_symbol_service_proto_enumTypes[2]
}

func (x PopulateSymbolResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PopulateSymbolResponseStatus.Descriptor instead.
func (PopulateSymbolResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{11, 0}
}

type GetPagedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *proto_models.PagedFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetPagedRequest) Reset() {
	*x = GetPagedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPagedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPagedRequest) ProtoMessage() {}

func (x *GetPagedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPagedRequest.ProtoReflect.Descriptor instead.
func (*GetPagedRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPagedRequest) GetFilter() *proto_models.PagedFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetPagedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*proto_models.Symbol `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalItems uint64                 `protobuf:"varint,2,opt,name=totalItems,proto3" json:"totalItems,omitempty"`
}

func (x *GetPagedResponse) Reset() {
	*x = GetPagedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPagedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPagedResponse) ProtoMessage() {}

func (x *GetPagedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPagedResponse.ProtoReflect.Descriptor instead.
func (*GetPagedResponse) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetPagedResponse) GetItems() []*proto_models.Symbol {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetPagedResponse) GetTotalItems() uint64 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

// can get symbols either by ID or Identifier + ISIN
type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReadRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol *proto_models.Symbol `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{3}
}

func (x *ReadResponse) GetSymbol() *proto_models.Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol *proto_models.Symbol `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRequest) GetSymbol() *proto_models.Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{5}
}

type DeleteSymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSymbolRequest) Reset() {
	*x = DeleteSymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSymbolRequest) ProtoMessage() {}

func (x *DeleteSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSymbolRequest.ProtoReflect.Descriptor instead.
func (*DeleteSymbolRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSymbolRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSymbolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSymbolResponse) Reset() {
	*x = DeleteSymbolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSymbolResponse) ProtoMessage() {}

func (x *DeleteSymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSymbolResponse.ProtoReflect.Descriptor instead.
func (*DeleteSymbolResponse) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{7}
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol *proto_models.Symbol `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRequest) GetSymbol() *proto_models.Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PopulateSymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PopulateSymbolRequest) Reset() {
	*x = PopulateSymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopulateSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopulateSymbolRequest) ProtoMessage() {}

func (x *PopulateSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopulateSymbolRequest.ProtoReflect.Descriptor instead.
func (*PopulateSymbolRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{10}
}

type PopulateSymbolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PopulateSymbolResponse) Reset() {
	*x = PopulateSymbolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopulateSymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopulateSymbolResponse) ProtoMessage() {}

func (x *PopulateSymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopulateSymbolResponse.ProtoReflect.Descriptor instead.
func (*PopulateSymbolResponse) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{11}
}

type StartUpdateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartUpdateJobRequest) Reset() {
	*x = StartUpdateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartUpdateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartUpdateJobRequest) ProtoMessage() {}

func (x *StartUpdateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartUpdateJobRequest.ProtoReflect.Descriptor instead.
func (*StartUpdateJobRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{12}
}

type StartUpdateJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartUpdateJobResponse) Reset() {
	*x = StartUpdateJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartUpdateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartUpdateJobResponse) ProtoMessage() {}

func (x *StartUpdateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartUpdateJobResponse.ProtoReflect.Descriptor instead.
func (*StartUpdateJobResponse) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{13}
}

type UpdateAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsCreated int64 `protobuf:"varint,1,opt,name=itemsCreated,proto3" json:"itemsCreated,omitempty"`
	ItemsUpdated int64 `protobuf:"varint,2,opt,name=itemsUpdated,proto3" json:"itemsUpdated,omitempty"`
	ItemsDeleted int64 `protobuf:"varint,3,opt,name=itemsDeleted,proto3" json:"itemsDeleted,omitempty"`
	ItemsIgnored int64 `protobuf:"varint,4,opt,name=itemsIgnored,proto3" json:"itemsIgnored,omitempty"`
	TotalItems   int64 `protobuf:"varint,5,opt,name=totalItems,proto3" json:"totalItems,omitempty"`
}

func (x *UpdateAllResponse) Reset() {
	*x = UpdateAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAllResponse) ProtoMessage() {}

func (x *UpdateAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAllResponse.ProtoReflect.Descriptor instead.
func (*UpdateAllResponse) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateAllResponse) GetItemsCreated() int64 {
	if x != nil {
		return x.ItemsCreated
	}
	return 0
}

func (x *UpdateAllResponse) GetItemsUpdated() int64 {
	if x != nil {
		return x.ItemsUpdated
	}
	return 0
}

func (x *UpdateAllResponse) GetItemsDeleted() int64 {
	if x != nil {
		return x.ItemsDeleted
	}
	return 0
}

func (x *UpdateAllResponse) GetItemsIgnored() int64 {
	if x != nil {
		return x.ItemsIgnored
	}
	return 0
}

func (x *UpdateAllResponse) GetTotalItems() int64 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

type SymbolOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description                string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Country                    string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Sector                     string                 `protobuf:"bytes,4,opt,name=sector,proto3" json:"sector,omitempty"`
	Industry                   string                 `protobuf:"bytes,5,opt,name=industry,proto3" json:"industry,omitempty"`
	Address                    string                 `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	FullTimeEmployees          int64                  `protobuf:"varint,7,opt,name=fullTimeEmployees,proto3" json:"fullTimeEmployees,omitempty"`
	FiscalYearEnd              string                 `protobuf:"bytes,8,opt,name=fiscalYearEnd,proto3" json:"fiscalYearEnd,omitempty"`
	LatestQuarter              *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=latestQuarter,proto3" json:"latestQuarter,omitempty"`
	MarketCapitalization       int64                  `protobuf:"varint,10,opt,name=marketCapitalization,proto3" json:"marketCapitalization,omitempty"`
	Ebitda                     int64                  `protobuf:"varint,11,opt,name=ebitda,proto3" json:"ebitda,omitempty"`
	PeRatio                    float32                `protobuf:"fixed32,12,opt,name=peRatio,proto3" json:"peRatio,omitempty"`
	PegRatio                   float32                `protobuf:"fixed32,13,opt,name=pegRatio,proto3" json:"pegRatio,omitempty"`
	BookValue                  float32                `protobuf:"fixed32,14,opt,name=bookValue,proto3" json:"bookValue,omitempty"`
	DividendPerShare           float32                `protobuf:"fixed32,15,opt,name=dividendPerShare,proto3" json:"dividendPerShare,omitempty"`
	DividendYield              float32                `protobuf:"fixed32,16,opt,name=dividendYield,proto3" json:"dividendYield,omitempty"`
	Eps                        float32                `protobuf:"fixed32,17,opt,name=eps,proto3" json:"eps,omitempty"`
	RevenuePerShareTtm         float32                `protobuf:"fixed32,18,opt,name=revenuePerShareTtm,proto3" json:"revenuePerShareTtm,omitempty"`
	ProfitMargin               float32                `protobuf:"fixed32,19,opt,name=profitMargin,proto3" json:"profitMargin,omitempty"`
	OperatingMarginTtm         float32                `protobuf:"fixed32,20,opt,name=operatingMarginTtm,proto3" json:"operatingMarginTtm,omitempty"`
	ReturnOnAssetsTtm          float32                `protobuf:"fixed32,21,opt,name=returnOnAssetsTtm,proto3" json:"returnOnAssetsTtm,omitempty"`
	ReturnOnEquity             float32                `protobuf:"fixed32,22,opt,name=returnOnEquity,proto3" json:"returnOnEquity,omitempty"`
	RevenueTtm                 int64                  `protobuf:"varint,23,opt,name=revenueTtm,proto3" json:"revenueTtm,omitempty"`
	GrossProfitTtm             int64                  `protobuf:"varint,24,opt,name=grossProfitTtm,proto3" json:"grossProfitTtm,omitempty"`
	DilutedEpsTtm              float32                `protobuf:"fixed32,25,opt,name=dilutedEpsTtm,proto3" json:"dilutedEpsTtm,omitempty"`
	QuarterlyEarningsGrowthYoy float32                `protobuf:"fixed32,26,opt,name=quarterlyEarningsGrowthYoy,proto3" json:"quarterlyEarningsGrowthYoy,omitempty"`
	QuarterlyRevenueGrowthYoy  float32                `protobuf:"fixed32,27,opt,name=quarterlyRevenueGrowthYoy,proto3" json:"quarterlyRevenueGrowthYoy,omitempty"`
	AnalystTargetPrice         float32                `protobuf:"fixed32,28,opt,name=analystTargetPrice,proto3" json:"analystTargetPrice,omitempty"`
	TrailingPe                 float32                `protobuf:"fixed32,29,opt,name=trailingPe,proto3" json:"trailingPe,omitempty"`
	ForwardPe                  float32                `protobuf:"fixed32,30,opt,name=forwardPe,proto3" json:"forwardPe,omitempty"`
	PriceToSalesRatioTtm       float32                `protobuf:"fixed32,31,opt,name=priceToSalesRatioTtm,proto3" json:"priceToSalesRatioTtm,omitempty"`
	PriceToBookRatio           float32                `protobuf:"fixed32,32,opt,name=priceToBookRatio,proto3" json:"priceToBookRatio,omitempty"`
	EvToRevenue                float32                `protobuf:"fixed32,33,opt,name=evToRevenue,proto3" json:"evToRevenue,omitempty"`
	EvToEbitda                 float32                `protobuf:"fixed32,34,opt,name=evToEbitda,proto3" json:"evToEbitda,omitempty"`
	Beta                       float32                `protobuf:"fixed32,35,opt,name=beta,proto3" json:"beta,omitempty"`
	WeekHigh52                 float32                `protobuf:"fixed32,36,opt,name=weekHigh52,proto3" json:"weekHigh52,omitempty"`
	WeekLow52                  float32                `protobuf:"fixed32,37,opt,name=weekLow52,proto3" json:"weekLow52,omitempty"`
	SharesOutstanding          int64                  `protobuf:"varint,38,opt,name=sharesOutstanding,proto3" json:"sharesOutstanding,omitempty"`
	SharesFloat                int64                  `protobuf:"varint,39,opt,name=sharesFloat,proto3" json:"sharesFloat,omitempty"`
	SharesShort                int64                  `protobuf:"varint,40,opt,name=sharesShort,proto3" json:"sharesShort,omitempty"`
	SharesShortPriorMonth      int64                  `protobuf:"varint,41,opt,name=sharesShortPriorMonth,proto3" json:"sharesShortPriorMonth,omitempty"`
	ShortRatio                 float32                `protobuf:"fixed32,42,opt,name=shortRatio,proto3" json:"shortRatio,omitempty"`
	ShortPercentOutstanding    float32                `protobuf:"fixed32,43,opt,name=shortPercentOutstanding,proto3" json:"shortPercentOutstanding,omitempty"`
	ShortPercentFloat          float32                `protobuf:"fixed32,44,opt,name=shortPercentFloat,proto3" json:"shortPercentFloat,omitempty"`
	PercentInsiders            float32                `protobuf:"fixed32,45,opt,name=percentInsiders,proto3" json:"percentInsiders,omitempty"`
	PercentInstitutions        float32                `protobuf:"fixed32,46,opt,name=percentInstitutions,proto3" json:"percentInstitutions,omitempty"`
	ForwardAnnualDividendRate  float32                `protobuf:"fixed32,47,opt,name=forwardAnnualDividendRate,proto3" json:"forwardAnnualDividendRate,omitempty"`
	ForwardAnnualDividendYield float32                `protobuf:"fixed32,48,opt,name=forwardAnnualDividendYield,proto3" json:"forwardAnnualDividendYield,omitempty"`
	PayoutRatio                float32                `protobuf:"fixed32,49,opt,name=payoutRatio,proto3" json:"payoutRatio,omitempty"`
	DividendDate               *timestamppb.Timestamp `protobuf:"bytes,50,opt,name=dividendDate,proto3" json:"dividendDate,omitempty"`
	ExDividendDate             *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=exDividendDate,proto3" json:"exDividendDate,omitempty"`
	LastSplitFactor            string                 `protobuf:"bytes,52,opt,name=lastSplitFactor,proto3" json:"lastSplitFactor,omitempty"`
	LastSplitDate              *timestamppb.Timestamp `protobuf:"bytes,53,opt,name=lastSplitDate,proto3" json:"lastSplitDate,omitempty"`
	UpdatedAt                  *timestamppb.Timestamp `protobuf:"bytes,54,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *SymbolOverview) Reset() {
	*x = SymbolOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolOverview) ProtoMessage() {}

func (x *SymbolOverview) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolOverview.ProtoReflect.Descriptor instead.
func (*SymbolOverview) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{15}
}

func (x *SymbolOverview) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SymbolOverview) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SymbolOverview) GetSector() string {
	if x != nil {
		return x.Sector
	}
	return ""
}

func (x *SymbolOverview) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *SymbolOverview) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SymbolOverview) GetFullTimeEmployees() int64 {
	if x != nil {
		return x.FullTimeEmployees
	}
	return 0
}

func (x *SymbolOverview) GetFiscalYearEnd() string {
	if x != nil {
		return x.FiscalYearEnd
	}
	return ""
}

func (x *SymbolOverview) GetLatestQuarter() *timestamppb.Timestamp {
	if x != nil {
		return x.LatestQuarter
	}
	return nil
}

func (x *SymbolOverview) GetMarketCapitalization() int64 {
	if x != nil {
		return x.MarketCapitalization
	}
	return 0
}

func (x *SymbolOverview) GetEbitda() int64 {
	if x != nil {
		return x.Ebitda
	}
	return 0
}

func (x *SymbolOverview) GetPeRatio() float32 {
	if x != nil {
		return x.PeRatio
	}
	return 0
}

func (x *SymbolOverview) GetPegRatio() float32 {
	if x != nil {
		return x.PegRatio
	}
	return 0
}

func (x *SymbolOverview) GetBookValue() float32 {
	if x != nil {
		return x.BookValue
	}
	return 0
}

func (x *SymbolOverview) GetDividendPerShare() float32 {
	if x != nil {
		return x.DividendPerShare
	}
	return 0
}

func (x *SymbolOverview) GetDividendYield() float32 {
	if x != nil {
		return x.DividendYield
	}
	return 0
}

func (x *SymbolOverview) GetEps() float32 {
	if x != nil {
		return x.Eps
	}
	return 0
}

func (x *SymbolOverview) GetRevenuePerShareTtm() float32 {
	if x != nil {
		return x.RevenuePerShareTtm
	}
	return 0
}

func (x *SymbolOverview) GetProfitMargin() float32 {
	if x != nil {
		return x.ProfitMargin
	}
	return 0
}

func (x *SymbolOverview) GetOperatingMarginTtm() float32 {
	if x != nil {
		return x.OperatingMarginTtm
	}
	return 0
}

func (x *SymbolOverview) GetReturnOnAssetsTtm() float32 {
	if x != nil {
		return x.ReturnOnAssetsTtm
	}
	return 0
}

func (x *SymbolOverview) GetReturnOnEquity() float32 {
	if x != nil {
		return x.ReturnOnEquity
	}
	return 0
}

func (x *SymbolOverview) GetRevenueTtm() int64 {
	if x != nil {
		return x.RevenueTtm
	}
	return 0
}

func (x *SymbolOverview) GetGrossProfitTtm() int64 {
	if x != nil {
		return x.GrossProfitTtm
	}
	return 0
}

func (x *SymbolOverview) GetDilutedEpsTtm() float32 {
	if x != nil {
		return x.DilutedEpsTtm
	}
	return 0
}

func (x *SymbolOverview) GetQuarterlyEarningsGrowthYoy() float32 {
	if x != nil {
		return x.QuarterlyEarningsGrowthYoy
	}
	return 0
}

func (x *SymbolOverview) GetQuarterlyRevenueGrowthYoy() float32 {
	if x != nil {
		return x.QuarterlyRevenueGrowthYoy
	}
	return 0
}

func (x *SymbolOverview) GetAnalystTargetPrice() float32 {
	if x != nil {
		return x.AnalystTargetPrice
	}
	return 0
}

func (x *SymbolOverview) GetTrailingPe() float32 {
	if x != nil {
		return x.TrailingPe
	}
	return 0
}

func (x *SymbolOverview) GetForwardPe() float32 {
	if x != nil {
		return x.ForwardPe
	}
	return 0
}

func (x *SymbolOverview) GetPriceToSalesRatioTtm() float32 {
	if x != nil {
		return x.PriceToSalesRatioTtm
	}
	return 0
}

func (x *SymbolOverview) GetPriceToBookRatio() float32 {
	if x != nil {
		return x.PriceToBookRatio
	}
	return 0
}

func (x *SymbolOverview) GetEvToRevenue() float32 {
	if x != nil {
		return x.EvToRevenue
	}
	return 0
}

func (x *SymbolOverview) GetEvToEbitda() float32 {
	if x != nil {
		return x.EvToEbitda
	}
	return 0
}

func (x *SymbolOverview) GetBeta() float32 {
	if x != nil {
		return x.Beta
	}
	return 0
}

func (x *SymbolOverview) GetWeekHigh52() float32 {
	if x != nil {
		return x.WeekHigh52
	}
	return 0
}

func (x *SymbolOverview) GetWeekLow52() float32 {
	if x != nil {
		return x.WeekLow52
	}
	return 0
}

func (x *SymbolOverview) GetSharesOutstanding() int64 {
	if x != nil {
		return x.SharesOutstanding
	}
	return 0
}

func (x *SymbolOverview) GetSharesFloat() int64 {
	if x != nil {
		return x.SharesFloat
	}
	return 0
}

func (x *SymbolOverview) GetSharesShort() int64 {
	if x != nil {
		return x.SharesShort
	}
	return 0
}

func (x *SymbolOverview) GetSharesShortPriorMonth() int64 {
	if x != nil {
		return x.SharesShortPriorMonth
	}
	return 0
}

func (x *SymbolOverview) GetShortRatio() float32 {
	if x != nil {
		return x.ShortRatio
	}
	return 0
}

func (x *SymbolOverview) GetShortPercentOutstanding() float32 {
	if x != nil {
		return x.ShortPercentOutstanding
	}
	return 0
}

func (x *SymbolOverview) GetShortPercentFloat() float32 {
	if x != nil {
		return x.ShortPercentFloat
	}
	return 0
}

func (x *SymbolOverview) GetPercentInsiders() float32 {
	if x != nil {
		return x.PercentInsiders
	}
	return 0
}

func (x *SymbolOverview) GetPercentInstitutions() float32 {
	if x != nil {
		return x.PercentInstitutions
	}
	return 0
}

func (x *SymbolOverview) GetForwardAnnualDividendRate() float32 {
	if x != nil {
		return x.ForwardAnnualDividendRate
	}
	return 0
}

func (x *SymbolOverview) GetForwardAnnualDividendYield() float32 {
	if x != nil {
		return x.ForwardAnnualDividendYield
	}
	return 0
}

func (x *SymbolOverview) GetPayoutRatio() float32 {
	if x != nil {
		return x.PayoutRatio
	}
	return 0
}

func (x *SymbolOverview) GetDividendDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DividendDate
	}
	return nil
}

func (x *SymbolOverview) GetExDividendDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExDividendDate
	}
	return nil
}

func (x *SymbolOverview) GetLastSplitFactor() string {
	if x != nil {
		return x.LastSplitFactor
	}
	return ""
}

func (x *SymbolOverview) GetLastSplitDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSplitDate
	}
	return nil
}

func (x *SymbolOverview) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SymbolOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SymbolOverviewRequest) Reset() {
	*x = SymbolOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolOverviewRequest) ProtoMessage() {}

func (x *SymbolOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolOverviewRequest.ProtoReflect.Descriptor instead.
func (*SymbolOverviewRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{16}
}

func (x *SymbolOverviewRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SymbolRequest) Reset() {
	*x = SymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_symbol_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRequest) ProtoMessage() {}

func (x *SymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_symbol_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRequest.ProtoReflect.Descriptor instead.
func (*SymbolRequest) Descriptor() ([]byte, []int) {
	return file_symbol_service_proto_rawDescGZIP(), []int{17}
}

func (x *SymbolRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_symbol_service_proto protoreflect.FileDescriptor

var file_symbol_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1d, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x33, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x33,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x22, 0x33, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x20, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x16, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x21, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x01, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb2, 0x11, 0x0a, 0x0e,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x66, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c,
	0x59, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x69, 0x73, 0x63, 0x61, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x0d,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x14, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x62, 0x69, 0x74, 0x64, 0x61, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x65, 0x62, 0x69, 0x74, 0x64, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x65, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x59, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x59, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x70, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x65,
	0x70, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x50, 0x65, 0x72,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x74, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x50, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54,
	0x74, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x54, 0x74, 0x6d, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x54, 0x74, 0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x74, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x11, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x54, 0x74, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e,
	0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x54, 0x74, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x54, 0x74, 0x6d, 0x12, 0x26, 0x0a, 0x0e,
	0x67, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x74, 0x6d, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x54, 0x74, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x6c, 0x75, 0x74, 0x65, 0x64, 0x45,
	0x70, 0x73, 0x54, 0x74, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x64, 0x69, 0x6c,
	0x75, 0x74, 0x65, 0x64, 0x45, 0x70, 0x73, 0x54, 0x74, 0x6d, 0x12, 0x3e, 0x0a, 0x1a, 0x71, 0x75,
	0x61, 0x72, 0x74, 0x65, 0x72, 0x6c, 0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x47,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x59, 0x6f, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x1a,
	0x71, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x6c, 0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x73, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x59, 0x6f, 0x79, 0x12, 0x3c, 0x0a, 0x19, 0x71, 0x75,
	0x61, 0x72, 0x74, 0x65, 0x72, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x47, 0x72,
	0x6f, 0x77, 0x74, 0x68, 0x59, 0x6f, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x71,
	0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x47,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x59, 0x6f, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x54, 0x74, 0x6d, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x54, 0x74, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x76, 0x54, 0x6f, 0x52, 0x65,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x65, 0x76, 0x54,
	0x6f, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x76, 0x54, 0x6f,
	0x45, 0x62, 0x69, 0x74, 0x64, 0x61, 0x18, 0x22, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x65, 0x76,
	0x54, 0x6f, 0x45, 0x62, 0x69, 0x74, 0x64, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x74, 0x61,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x62, 0x65, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x65, 0x65, 0x6b, 0x48, 0x69, 0x67, 0x68, 0x35, 0x32, 0x18, 0x24, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x77, 0x65, 0x65, 0x6b, 0x48, 0x69, 0x67, 0x68, 0x35, 0x32, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x65, 0x65, 0x6b, 0x4c, 0x6f, 0x77, 0x35, 0x32, 0x18, 0x25, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x77, 0x65, 0x65, 0x6b, 0x4c, 0x6f, 0x77, 0x35, 0x32, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4f, 0x75, 0x74,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x15,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x2a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x17, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x69, 0x74,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41,
	0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x59, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x02, 0x52, 0x1a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x59,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x18, 0x31, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x65, 0x78, 0x44, 0x69, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x2b, 0x0a, 0x15, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x23, 0x0a,
	0x0d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x32, 0xea, 0x04, 0x0a, 0x0d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x08,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2f, 0x7b,
	0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x53,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2f, 0x7b, 0x75, 0x75,
	0x69, 0x64, 0x7d, 0x12, 0x7e, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c,
	0x12, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x28, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x22, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x42,
	0xb0, 0x02, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x31, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x92,
	0x41, 0xef, 0x01, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x44, 0x79, 0x73, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x3a, 0x2f, 0x2f, 0x64, 0x79, 0x73, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x40, 0x64, 0x79, 0x73, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x32, 0x03, 0x31, 0x2e, 0x30,
	0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x69, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12, 0x62,
	0x0a, 0x58, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x64, 0x69, 0x64, 0x6e,
	0x27, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x20,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x12, 0x06, 0x0a, 0x04, 0x9a, 0x02,
	0x01, 0x07, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_symbol_service_proto_rawDescOnce sync.Once
	file_symbol_service_proto_rawDescData = file_symbol_service_proto_rawDesc
)

func file_symbol_service_proto_rawDescGZIP() []byte {
	file_symbol_service_proto_rawDescOnce.Do(func() {
		file_symbol_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_symbol_service_proto_rawDescData)
	})
	return file_symbol_service_proto_rawDescData
}

var file_symbol_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_symbol_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_symbol_service_proto_goTypes = []interface{}{
	(UpdateResponseStatus)(0),         // 0: v1.symbol_service.UpdateResponse.status
	(DeleteSymbolResponseStatus)(0),   // 1: v1.symbol_service.DeleteSymbolResponse.status
	(PopulateSymbolResponseStatus)(0), // 2: v1.symbol_service.PopulateSymbolResponse.status
	(*GetPagedRequest)(nil),           // 3: v1.symbol_service.GetPagedRequest
	(*GetPagedResponse)(nil),          // 4: v1.symbol_service.GetPagedResponse
	(*ReadRequest)(nil),               // 5: v1.symbol_service.ReadRequest
	(*ReadResponse)(nil),              // 6: v1.symbol_service.ReadResponse
	(*UpdateRequest)(nil),             // 7: v1.symbol_service.UpdateRequest
	(*UpdateResponse)(nil),            // 8: v1.symbol_service.UpdateResponse
	(*DeleteSymbolRequest)(nil),       // 9: v1.symbol_service.DeleteSymbolRequest
	(*DeleteSymbolResponse)(nil),      // 10: v1.symbol_service.DeleteSymbolResponse
	(*CreateRequest)(nil),             // 11: v1.symbol_service.CreateRequest
	(*CreateResponse)(nil),            // 12: v1.symbol_service.CreateResponse
	(*PopulateSymbolRequest)(nil),     // 13: v1.symbol_service.PopulateSymbolRequest
	(*PopulateSymbolResponse)(nil),    // 14: v1.symbol_service.PopulateSymbolResponse
	(*StartUpdateJobRequest)(nil),     // 15: v1.symbol_service.StartUpdateJobRequest
	(*StartUpdateJobResponse)(nil),    // 16: v1.symbol_service.StartUpdateJobResponse
	(*UpdateAllResponse)(nil),         // 17: v1.symbol_service.UpdateAllResponse
	(*SymbolOverview)(nil),            // 18: v1.symbol_service.SymbolOverview
	(*SymbolOverviewRequest)(nil),     // 19: v1.symbol_service.SymbolOverviewRequest
	(*SymbolRequest)(nil),             // 20: v1.symbol_service.SymbolRequest
	(*proto_models.PagedFilter)(nil),  // 21: v1.PagedFilter
	(*proto_models.Symbol)(nil),       // 22: v1.Symbol
	(*timestamppb.Timestamp)(nil),     // 23: google.protobuf.Timestamp
}
var file_symbol_service_proto_depIdxs = []int32{
	21, // 0: v1.symbol_service.GetPagedRequest.filter:type_name -> v1.PagedFilter
	22, // 1: v1.symbol_service.GetPagedResponse.items:type_name -> v1.Symbol
	22, // 2: v1.symbol_service.ReadResponse.symbol:type_name -> v1.Symbol
	22, // 3: v1.symbol_service.UpdateRequest.symbol:type_name -> v1.Symbol
	22, // 4: v1.symbol_service.CreateRequest.symbol:type_name -> v1.Symbol
	23, // 5: v1.symbol_service.SymbolOverview.latestQuarter:type_name -> google.protobuf.Timestamp
	23, // 6: v1.symbol_service.SymbolOverview.dividendDate:type_name -> google.protobuf.Timestamp
	23, // 7: v1.symbol_service.SymbolOverview.exDividendDate:type_name -> google.protobuf.Timestamp
	23, // 8: v1.symbol_service.SymbolOverview.lastSplitDate:type_name -> google.protobuf.Timestamp
	23, // 9: v1.symbol_service.SymbolOverview.updatedAt:type_name -> google.protobuf.Timestamp
	3,  // 10: v1.symbol_service.SymbolService.GetPaged:input_type -> v1.symbol_service.GetPagedRequest
	19, // 11: v1.symbol_service.SymbolService.Overview:input_type -> v1.symbol_service.SymbolOverviewRequest
	20, // 12: v1.symbol_service.SymbolService.Get:input_type -> v1.symbol_service.SymbolRequest
	15, // 13: v1.symbol_service.SymbolService.UpdateAll:input_type -> v1.symbol_service.StartUpdateJobRequest
	15, // 14: v1.symbol_service.SymbolService.UpdateAllJob:input_type -> v1.symbol_service.StartUpdateJobRequest
	4,  // 15: v1.symbol_service.SymbolService.GetPaged:output_type -> v1.symbol_service.GetPagedResponse
	18, // 16: v1.symbol_service.SymbolService.Overview:output_type -> v1.symbol_service.SymbolOverview
	22, // 17: v1.symbol_service.SymbolService.Get:output_type -> v1.Symbol
	17, // 18: v1.symbol_service.SymbolService.UpdateAll:output_type -> v1.symbol_service.UpdateAllResponse
	16, // 19: v1.symbol_service.SymbolService.UpdateAllJob:output_type -> v1.symbol_service.StartUpdateJobResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_symbol_service_proto_init() }
func file_symbol_service_proto_init() {
	if File_symbol_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_symbol_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPagedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPagedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSymbolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopulateSymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopulateSymbolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartUpdateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartUpdateJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_symbol_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_symbol_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_symbol_service_proto_goTypes,
		DependencyIndexes: file_symbol_service_proto_depIdxs,
		EnumInfos:         file_symbol_service_proto_enumTypes,
		MessageInfos:      file_symbol_service_proto_msgTypes,
	}.Build()
	File_symbol_service_proto = out.File
	file_symbol_service_proto_rawDesc = nil
	file_symbol_service_proto_goTypes = nil
	file_symbol_service_proto_depIdxs = nil
}
